nimTitle	archetypeStore	necsus/runtime/archetypeStore.html	module src/necsus/runtime/archetypeStore		0
nim	ArchRow	necsus/runtime/archetypeStore.html#ArchRow	object ArchRow		4
nim	ArchetypeStore	necsus/runtime/archetypeStore.html#ArchetypeStore	object ArchetypeStore		9
nim	NewArchSlot	necsus/runtime/archetypeStore.html#NewArchSlot	type NewArchSlot		14
nim	`=copy`	necsus/runtime/archetypeStore.html#=copy,ArchRow[Comps: tuple],ArchRow[Comps: tuple]	proc `=copy`[Comps: tuple](target: var ArchRow[Comps]; source: ArchRow[Comps])		16
nim	`=copy`	necsus/runtime/archetypeStore.html#=copy,ArchetypeStore[Comps: tuple],ArchetypeStore[Comps: tuple]	proc `=copy`[Comps: tuple](target: var ArchetypeStore[Comps];\n                      source: ArchetypeStore[Comps])		20
nim	newArchetypeStore	necsus/runtime/archetypeStore.html#newArchetypeStore,ArchetypeId,SomeInteger	proc newArchetypeStore[Comps: tuple](archetype: ArchetypeId; initialSize: SomeInteger): ArchetypeStore[\n    Comps]		24
nim	readArchetype	necsus/runtime/archetypeStore.html#readArchetype,ArchetypeStore	proc readArchetype(store: ArchetypeStore): ArchetypeId		30
nim	next	necsus/runtime/archetypeStore.html#next,ArchetypeStore[Comps: tuple],BlockIter,EntityId	proc next[Comps: tuple](store: var ArchetypeStore[Comps]; iter: var BlockIter;\n                   eid: var EntityId): ptr Comps		34
nim	entityIds	necsus/runtime/archetypeStore.html#entityIds.i,ArchetypeStore[Comps]	iterator entityIds[Comps](store: var ArchetypeStore[Comps]): EntityId		44
nim	addLen	necsus/runtime/archetypeStore.html#addLen,ArchetypeStore[Comps: tuple],uint	proc addLen[Comps: tuple](store: var ArchetypeStore[Comps]; len: var uint)		50
nim	addLen	necsus/runtime/archetypeStore.html#addLen,ArchetypeStore[Comps: tuple],uint,proc(Comps)	proc addLen[Comps: tuple](store: var ArchetypeStore[Comps]; len: var uint; predicate: proc (\n    row: var Comps): bool {.nimcall, gcsafe, raises: [].})		55
nim	ensureAlloced	necsus/runtime/archetypeStore.html#ensureAlloced,ArchetypeStore[Comps: tuple]	proc ensureAlloced[Comps: tuple](store: var ArchetypeStore[Comps])		66
nim	newSlot	necsus/runtime/archetypeStore.html#newSlot,ArchetypeStore[Comps: tuple],EntityId	proc newSlot[Comps: tuple](store: var ArchetypeStore[Comps]; entityId: EntityId): NewArchSlot[\n    Comps]		71
nim	entityId	necsus/runtime/archetypeStore.html#entityId,NewArchSlot[Comps: tuple]	proc entityId[Comps: tuple](entry: NewArchSlot[Comps]): EntityId		80
nim	index	necsus/runtime/archetypeStore.html#index,NewArchSlot[Comps: tuple]	proc index[Comps: tuple](entry: NewArchSlot[Comps]): uint		83
nim	setComp	necsus/runtime/archetypeStore.html#setComp,NewArchSlot[Comps: tuple],sinkComps	proc setComp[Comps: tuple](slot: NewArchSlot[Comps]; comps: sink Comps): EntityId		86
nim	getComps	necsus/runtime/archetypeStore.html#getComps,ArchetypeStore[Comps: tuple],uint	proc getComps[Comps: tuple](store: var ArchetypeStore[Comps]; index: uint): ptr Comps		93
nim	del	necsus/runtime/archetypeStore.html#del,ArchetypeStore,uint	proc del(store: var ArchetypeStore; index: uint)		98
nim	moveEntity	necsus/runtime/archetypeStore.html#moveEntity,World,ptr.EntityIndex,ArchetypeStore[FromArch: tuple],ArchetypeStore[ToArch: tuple],sinkNewComps,proc(sinkFromArch,sinkNewComps,ToArch)	proc moveEntity[FromArch: tuple; NewComps: tuple; ToArch: tuple](world: var World;\n    entityIndex: ptr EntityIndex; fromArch: var ArchetypeStore[FromArch];\n    toArch: var ArchetypeStore[ToArch]; newValues: sink NewComps; combine: proc (\n    existing: sink FromArch; newValues: sink NewComps; output: var ToArch): bool {.\n    gcsafe, raises: [], nimcall.})		103
nimgrp	=copy	necsus/runtime/archetypeStore.html#=copy-procs-all	proc		16
nimgrp	addlen	necsus/runtime/archetypeStore.html#addLen-procs-all	proc		50
