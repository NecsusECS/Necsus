SmallValue	necsus/util/openAddrEntry.html#SmallValue	openAddrEntry: SmallValue	
UsedKey	necsus/util/openAddrEntry.html#UsedKey	EntryState.UsedKey	
UnusedKey	necsus/util/openAddrEntry.html#UnusedKey	EntryState.UnusedKey	
TombstonedKey	necsus/util/openAddrEntry.html#TombstonedKey	EntryState.TombstonedKey	
EntryState	necsus/util/openAddrEntry.html#EntryState	openAddrEntry: EntryState	
Entry	necsus/util/openAddrEntry.html#Entry	openAddrEntry: Entry	
usedBit	necsus/util/openAddrEntry.html#usedBit	openAddrEntry: usedBit	
tombstoneBit	necsus/util/openAddrEntry.html#tombstoneBit	openAddrEntry: tombstoneBit	
maxValue	necsus/util/openAddrEntry.html#maxValue	openAddrEntry: maxValue	
allBits	necsus/util/openAddrEntry.html#allBits	openAddrEntry: allBits	
clearFlagsMask	necsus/util/openAddrEntry.html#clearFlagsMask	openAddrEntry: clearFlagsMask	
encode	necsus/util/openAddrEntry.html#encode,K,V,staticEntryState	openAddrEntry: encode[K: SmallValue; V: SmallValue](key: K; value: V; state: static EntryState): Entry[\n    K, V]	
value	necsus/util/openAddrEntry.html#value,Entry[K,V]	openAddrEntry: value[K, V](entry: Entry[K, V]): V	
key	necsus/util/openAddrEntry.html#key,Entry[K,V]	openAddrEntry: key[K, V](entry: Entry[K, V]): K	
isState	necsus/util/openAddrEntry.html#isState,Entry[K,V],static[EntryState]	openAddrEntry: isState[K, V](entry: Entry[K, V]; state: static[EntryState]): bool	
isWritable	necsus/util/openAddrEntry.html#isWritable,Entry[K,V]	openAddrEntry: isWritable[K, V](entry: Entry[K, V]): bool	
`$`	necsus/util/openAddrEntry.html#$,Entry[K,V]	openAddrEntry: `$`[K, V](entry: Entry[K, V]): string	
dump	necsus/util/openAddrEntry.html#dump,Entry[K,V]	openAddrEntry: dump[K, V](entry: Entry[K, V]): string	
