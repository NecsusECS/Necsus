CodeGenInfo	necsus/compiletime/codeGenInfo.html#CodeGenInfo	codeGenInfo: CodeGenInfo	
newCodeGenInfo	necsus/compiletime/codeGenInfo.html#newCodeGenInfo,NimNode,NimNode,ParsedApp,openArray[ParsedSystem]	codeGenInfo: newCodeGenInfo(name: NimNode; config: NimNode; app: ParsedApp;\n               allSystems: openArray[ParsedSystem]): CodeGenInfo	
componentEnumVal	necsus/compiletime/codeGenInfo.html#componentEnumVal,ComponentEnum,ComponentDef	codeGenInfo: componentEnumVal(components: ComponentEnum; component: ComponentDef): NimNode	
asTupleType	necsus/compiletime/codeGenInfo.html#asTupleType,openArray[DirectiveArg]	codeGenInfo: asTupleType(args: openArray[DirectiveArg]): NimNode	
createComponentEnum	necsus/compiletime/codeGenInfo.html#createComponentEnum,CodeGenInfo,openArray[ComponentDef]	codeGenInfo: createComponentEnum(codeGenInfo: CodeGenInfo;\n                    components: openArray[ComponentDef]): NimNode	
name	necsus/compiletime/codeGenInfo.html#name,Group[ComponentDef]	codeGenInfo: name(group: Group[ComponentDef]): string	
componentStoreIdent	necsus/compiletime/codeGenInfo.html#componentStoreIdent,Group[ComponentDef]	codeGenInfo: componentStoreIdent(group: Group[ComponentDef]): NimNode	
asStorageTuple	necsus/compiletime/codeGenInfo.html#asStorageTuple,Group[ComponentDef]	codeGenInfo: asStorageTuple(group: Group[ComponentDef]): NimNode	
groups	necsus/compiletime/codeGenInfo.html#groups.i,CodeGenInfo,	codeGenInfo: groups(codeGenInfo: CodeGenInfo; directive: SpawnDef | AttachDef | LookupDef): Group[\n    ComponentDef]	
canQueryExecute	necsus/compiletime/codeGenInfo.html#canQueryExecute,CodeGenInfo,QueryDef	codeGenInfo: canQueryExecute(codeGenInfo: CodeGenInfo; query: QueryDef): bool	
confIdent	necsus/compiletime/codeGenInfo.html#confIdent	codeGenInfo: confIdent	
worldIdent	necsus/compiletime/codeGenInfo.html#worldIdent	codeGenInfo: worldIdent	
deleteProc	necsus/compiletime/codeGenInfo.html#deleteProc	codeGenInfo: deleteProc	
